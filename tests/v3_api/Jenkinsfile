node {
  wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm', 'defaultFg': 2, 'defaultBg':1]) {
    checkout scm

    stage('Configure and Build') {
      sh "./tests/v3_api/scripts/configure.sh"

      if (env.AWS_SSH_PEM_KEY && env.AWS_SSH_KEY_NAME) {
        sh "mkdir -p .ssh && echo \"${AWS_SSH_PEM_KEY}\" > .ssh/{AWS_SSH_KEY_NAME} && chmod 400 .ssh/*"
      }
      
      sh "./tests/v3_api/scripts/build.sh"
    }
    try {
      stage('Run Validation Tests') {
        try {
          sh "docker run --name ${JOB_NAME}${env.BUILD_NUMBER}  --env-file .env " +
             "rancher-validation-tests /bin/bash -c \'pytest -v -s --junit-xml=results.xml ${PYTEST_OPTIONS} tests/v3_api/\'"
        } catch(err) {
          echo 'Test run had failures. Collecting results...'
        }

      }

      stage('Test Report') {
        sh "docker cp ${JOB_NAME}${env.BUILD_NUMBER}:/src/rancher-validation/results.xml ."
        step([$class: 'JUnitResultArchiver', testResults: '**/results.xml'])
        sh "docker rm -v ${JOB_NAME}${env.BUILD_NUMBER}"
      }
    } catch(err){
      sh "docker stop ${JOB_NAME}${env.BUILD_NUMBER}"
      sh "docker rm -v ${JOB_NAME}${env.BUILD_NUMBER}"
    }
  }
}